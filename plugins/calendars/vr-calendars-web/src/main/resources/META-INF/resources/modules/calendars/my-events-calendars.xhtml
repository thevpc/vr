<!DOCTYPE html>
<html
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui" 
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    >
    <h:head>
        <title>Start Page</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.10/jquery-ui.min.js"></script>
        <h:outputScript library="primefaces" name="jquery/jquery.js" target="head"/>
        <style>
            .ui-widget {

                font-size: 1.1em;
                font-weight: 600;
            }

            .ui-widget, .ui-widget .ui-widget {
                font-family: 'Ubuntu', sans-serif;
            }
        </style>


    </h:head>
    <h:body>

        <!--@elvariable id="vr" type="net.thevpc.app.vainruling.core.web.jsf.Vr"-->
        <ui:composition template="#{vr.privateTemplatePath}">
            <ui:define name="content">
                <h:form id="form">
                    <p:growl id="messages" showDetail="true" />
                    <div class="box box-default">
                        <div class="box-body">
                            <div class="form-group">
                                <p:outputLabel value="Choisir Calendrier"/>
                                <p:selectOneMenu  value="#{eventsCalendarsCtrl.model.calendar}"
                                                  styleClass="form-control"
                                                  filter="true" filterMatchMode="contains"
                                                  >

                                    <f:selectItems value="#{eventsCalendarsCtrl.model.calendars}"/>
                                    <p:ajax listener="#{eventsCalendarsCtrl.onRefreshCurrentCalendar}"   update=":form:schedule"/>

                                </p:selectOneMenu>
                            </div>
                        </div>
                    </div>

                    <div class="box box-primary">
                        <div class="box-body">
                            <h:panelGrid columnClasses="value" styleClass="vr-no-border-grid">
                                <p:schedule id="schedule" value="#{eventsCalendarsCtrl.model.eventModel}" 
                                            widgetVar="myschedule" 
                                            timeFormat="HH:mm"  
                                            class="schedule-container"
                                            timeZone="GMT+2"
                                            locale="en_GB"
                                            >

                                    <p:ajax event="dateSelect" disabled="#{!eventsCalendarsCtrl.model.currentCalendarEditable}" listener="#{eventsCalendarsCtrl.onDateSelect}" update=":form:eventDialog" oncomplete="PF('eventDialog').show();" />
                                    <p:ajax event="eventSelect" listener="#{eventsCalendarsCtrl.onEventSelect}" update=":form:eventDialog" 
                                            oncomplete="PF('eventDialog').show();" />
                                    <p:ajax event="eventMove"  disabled="#{!eventsCalendarsCtrl.model.currentCalendarEditable}" listener="#{eventsCalendarsCtrl.onEventMove}" update="messages" />
                                    <p:ajax event="eventResize"  disabled="#{!eventsCalendarsCtrl.model.currentCalendarEditable}" listener="#{eventsCalendarsCtrl.onEventResize}" update="messages" />

                                </p:schedule>
                            </h:panelGrid>
                        </div>
                    </div>                    

                    <p:dialog id="eventDialog" widgetVar="eventDialog" 
                              header="Détails"  
                              showEffect="explode" hideEffect="explode" modal="true" closable="true" closeOnEscape="true">


                        <p:panelGrid id="eventDetails" styleClass="vr-no-border-grid">
                            <p:row>
                                <p:column>
                                    <p:outputLabel for="title" value="Titre"/>
                                </p:column>
                                <p:column>
                                    <p:inputText id="title"
                                                 disabled="#{!eventsCalendarsCtrl.model.currentEventEditable}"
                                                 value="#{eventsCalendarsCtrl.model.event.title}"
                                                 style="width: 100%;"
                                                 />
                                </p:column>
                            </p:row>
                            <p:row>
                                <p:column>
                                    <p:outputLabel value="Calendrier" />

                                </p:column>
                                <p:column>
                                    <p:selectOneMenu class="form-control vr-form-control"
                                                     rendered="#{eventsCalendarsCtrl.model.currentEventEditable}"
                                                     value="#{eventsCalendarsCtrl.model.event.calendar}"
                                                     converter="#{vr.entityObjConverter('AppCalendar')}"
                                                     styleClass="vr-form-field"
                                                     filter="true" filterMatchMode="contains"
                                                     >
                                        <f:selectItems value="#{eventsCalendarsCtrl.model.writeCalendars}"/>
                                    </p:selectOneMenu>
                                    <p:inputText class="form-control vr-form-control"
                                                 rendered="#{!eventsCalendarsCtrl.model.currentEventEditable}"
                                                 disabled="true"
                                                 value="#{eventsCalendarsCtrl.model.event.calendar.name}"
                                                 />
                                </p:column>

                            </p:row>
                            <p:row>
                                <p:column>
                                    <p:outputLabel value="Type" />

                                </p:column>
                                <p:column>
                                    <p:selectOneMenu class="form-control vr-form-control"
                                                     id="type"
                                                     disabled="#{!eventsCalendarsCtrl.model.currentEventEditable}"
                                                     value="#{eventsCalendarsCtrl.model.event.eventType}"
                                                     converter="#{vr.entityObjConverter('AppCalendarEventType')}"
                                                     styleClass="vr-form-field"
                                                     filter="true" filterMatchMode="contains"
                                                     >
                                        <f:selectItems value="#{vr.entitySelectItems('AppCalendarEventType',true,false)}"/>
                                    </p:selectOneMenu>
                                </p:column>

                            </p:row>
                            <p:row>
                                <p:column>
                                    <p:outputLabel for="from" value="De:" />
                                </p:column>
                                <p:column>
                                    <p:calendar id="from" 
                                                value="#{eventsCalendarsCtrl.model.event.startDate}" 
                                                disabled="#{!eventsCalendarsCtrl.model.currentEventEditable}"
                                                timeZone="GMT+2" pattern="dd/MM/yyyy HH:mm" />
                                </p:column>
                            </p:row>
                            <p:row>
                                <p:column>
                                    <p:outputLabel for="to" value="A" />
                                </p:column>
                                <p:column>
                                    <p:calendar id="to" value="#{eventsCalendarsCtrl.model.event.endDate}" 
                                                disabled="#{!eventsCalendarsCtrl.model.currentEventEditable}"
                                                timeZone="GMT+2" pattern="dd/MM/yyyy HH:mm" />
                                </p:column>
                            </p:row>
                            <p:row>
                                <p:column>
                                    <p:outputLabel for="allDay" value="Toute la journée" />
                                </p:column>
                                <p:column>
                                    <h:selectBooleanCheckbox id="allDay" 
                                                             disabled="#{!eventsCalendarsCtrl.model.currentEventEditable}"
                                                             value="#{eventsCalendarsCtrl.model.event.allDay}" />
                                </p:column>
                            </p:row>
                            <p:row>
                                <p:column>
                                    <p:outputLabel value="Emplacement" />
                                </p:column>
                                <p:column>
                                    <p:selectOneMenu class="form-control vr-form-control"
                                                     disabled="#{!eventsCalendarsCtrl.model.currentEventEditable}"
                                                     value="#{eventsCalendarsCtrl.model.event.location}"
                                                     converter="#{vr.entityObjConverter('AppArea')}"
                                                     styleClass="vr-form-field"
                                                     filter="true" filterMatchMode="contains"
                                                     >
                                        <f:selectItems value="#{vr.entitySelectItems('AppArea',true,false)}"/>
                                    </p:selectOneMenu>
                                </p:column>
                            </p:row>
                            <p:row>
                                <p:column>
                                    <p:outputLabel value="Autre Emplacement"/>
                                </p:column>
                                <p:column>
                                    <p:inputText disabled="#{!eventsCalendarsCtrl.model.currentEventEditable}"
                                                 value="#{eventsCalendarsCtrl.model.event.otherLocation}" 
                                                 style="width: 100%;"
                                                 />
                                </p:column>
                            </p:row>
                            <p:row>
                                <p:column>
                                    <p:outputLabel value="Propriétaire" />
                                </p:column>
                                <p:column>
                                    <p:inputText disabled="true"
                                                 value="#{eventsCalendarsCtrl.model.event.owner.fullName}" 
                                                 style="width: 100%;"
                                                 />
                                </p:column>
                            </p:row>
                            <c:forEach var="item" items="#{eventsCalendarsCtrl.model.eventProperties}">
                                <p:row>
                                    <p:column>
                                        <p:outputLabel value="#{item.propertyName}" />
                                    </p:column>
                                    <p:column>
                                        <p:inputText disabled="true"
                                                     value="#{item.propertyValue}" 
                                                     style="width: 100%;"
                                                     />
                                    </p:column>
                                </p:row>
                            </c:forEach>
                            <p:row>
                                <p:column colspan="2">
                                    <h:inputTextarea style="width: 100%" 
                                                     disabled="#{!eventsCalendarsCtrl.model.currentEventEditable}"
                                                     value="#{eventsCalendarsCtrl.model.event.description}" />
                                </p:column>
                            </p:row>
                        </p:panelGrid>



                        <div style="margin-top: 10px;float: right;">
                            <p:commandButton id="saveButton" rendered="#{eventsCalendarsCtrl.model.currentEventEditable}" value="Enregistrer" actionListener="#{eventsCalendarsCtrl.onSave()}" oncomplete="PF('myschedule').update();PF('eventDialog').hide();" 
                                             update="schedule" />
                            <p:commandButton id="deleteButton" rendered="#{eventsCalendarsCtrl.model.currentEventEditable and ! eventsCalendarsCtrl.model.currentEventNew}"  value="Supprimer" actionListener="#{eventsCalendarsCtrl.onDelete()}" oncomplete="PF('myschedule').update();PF('eventDialog').hide();" 
                                             update="schedule" />
                            <p:commandButton id="closeButton" value="Fermer"  oncomplete="PF('myschedule').update();PF('eventDialog').hide();" style="position: relative"/>
                        </div>
                    </p:dialog>
                </h:form>
            </ui:define>

        </ui:composition>


        <script type="text/javascript">
            PrimeFaces.locales['en_GB'] = {
                firstDay: 2
            };
            PrimeFaces.locales ['fr'] = {
                closeText: "Fermer",
                prevText: "Précédent",
                nextText: "Suivant",
                monthNames: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"],
                monthNamesShort: ["Jan", "Fév", "Mar", "Avr", "Mai", "Jun", "Jul", "Aoû", "Sep", "Oct", "Nov", "Déc"],
                dayNames: ["Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi"],
                dayNamesShort: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"],
                dayNamesMin: ["D", "L", "M", "M", "J", "V", "S"],
                weekHeader: "Semaine",
                firstDay: 2,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: "",
                timeOnlyTitle: "Choisir l'heure",
                timeText: "Heure",
                hourText: "Heures",
                minuteText: "Minutes",
                secondText: "Secondes",
                currentText: "Maintenant",
                ampm: false,
                month: "Mois",
                week: "Semaine",
                day: "Jour",
                allDayText: "Toute la journée",
                messages: {
                    // components
                    "javax.faces.component.UIInput.CONVERSION": "{0} : une erreur de conversion s'est produite."
                    , "javax.faces.component.UIInput.REQUIRED": "{0} : Erreur de validation : la valeur est requise."
                    , "javax.faces.component.UIInput.UPDATE": "{0} : Une erreur s'est produite lors du traitement des informations que vous avez entr\u00e9es."
                    , "javax.faces.component.UISelectOne.INVALID": "{0} : Erreur de validation : la valeur n'est pas valide."
                    , "javax.faces.component.UISelectMany.INVALID": "{0} : Erreur de validation : la valeur n'est pas valide."
                            // converters
                    , "javax.faces.converter.BigDecimalConverter.DECIMAL": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal sign\u00e9."
                    , "javax.faces.converter.BigDecimalConverter.DECIMAL_detail": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal sign\u00e9 compos\u00e9 de z\u00e9ro ou plusieurs chiffres, lesquels peuvent \u00eatre suivis d'une d\u00e9cimale et d'une fraction.  Exemple : {1}"
                    , "javax.faces.converter.BigIntegerConverter.BIGINTEGER": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres."
                    , "javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres. Exemple : {1}"
                    , "javax.faces.converter.BooleanConverter.BOOLEAN": "{1} : '{0}' doit \u00eatre 'true' ou 'false'."
                    , "javax.faces.converter.BooleanConverter.BOOLEAN_detail": "{1} : '{0}' doit \u00eatre 'true' ou 'false'.  Toute valeur autre que 'true' sera \u00e9valu\u00e9e comme 'false'."
                    , "javax.faces.converter.ByteConverter.BYTE": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compris entre 0 et 255."
                    , "javax.faces.converter.ByteConverter.BYTE_detail": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compris entre 0 et 255.  Exemple : {1}"
                    , "javax.faces.converter.CharacterConverter.CHARACTER": "{1} : '{0}' doit \u00eatre un caract\u00e8re valide."
                    , "javax.faces.converter.CharacterConverter.CHARACTER_detail": "{1} : '{0}' doit \u00eatre un caract\u00e8re ASCII valide."
                    , "javax.faces.converter.DateTimeConverter.DATE": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une date."
                    , "javax.faces.converter.DateTimeConverter.DATE_detail": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une date. Exemple : {1}"
                    , "javax.faces.converter.DateTimeConverter.TIME": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une heure."
                    , "javax.faces.converter.DateTimeConverter.TIME_detail": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une heure. Exemple : {1}"
                    , "javax.faces.converter.DateTimeConverter.DATETIME": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une date et une heure."
                    , "javax.faces.converter.DateTimeConverter.DATETIME_detail": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une date et une heure. Exemple : {1}"
                    , "javax.faces.converter.DateTimeConverter.PATTERN_TYPE": "{1} : Un attribut 'pattern' ou 'type' doit \u00eatre sp\u00e9cifi\u00e9 pour la conversion de la valeur '{0}'."
                    , "javax.faces.converter.DoubleConverter.DOUBLE": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres."
                    , "javax.faces.converter.DoubleConverter.DOUBLE_detail": "{2} : '{0}' doit \u00eatre un nombre compris entre 4,9E-324 et 1,7976931348623157E308. Exemple : {1}"
                    , "javax.faces.converter.EnumConverter.ENUM": "{2} : '{0}' doit \u00eatre convertible en \u00e9num\u00e9ration."
                    , "javax.faces.converter.EnumConverter.ENUM_detail": "{2} : '{0}' doit \u00eatre convertible en \u00e9num\u00e9ration \u00e0 partir de l'\u00e9num\u00e9ration qui contient la constante '{1}'."
                    , "javax.faces.converter.EnumConverter.ENUM_NO_CLASS": "{1} : '{0}' doit \u00eatre convertible en \u00e9num\u00e9ration \u00e0 partir de l'\u00e9num\u00e9ration, mais aucune classe d'\u00e9num\u00e9ration n'a \u00e9t\u00e9 fournie."
                    , "javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail": "{1} : '{0}' doit \u00eatre convertible en \u00e9num\u00e9ration \u00e0 partir de l'\u00e9num\u00e9ration, mais aucune classe d'\u00e9num\u00e9ration n'a \u00e9t\u00e9 fournie."
                    , "javax.faces.converter.FloatConverter.FLOAT": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres."
                    , "javax.faces.converter.FloatConverter.FLOAT_detail": "{2} : '{0}' doit \u00eatre un nombre compris entre 1,4E-45 et 3,4028235E38. Exemple : {1}"
                    , "javax.faces.converter.IntegerConverter.INTEGER": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres."
                    , "javax.faces.converter.IntegerConverter.INTEGER_detail": "{2} : '{0}' doit \u00eatre un nombre compris entre -2147483648 et 2147483647. Exemple : {1}"
                    , "javax.faces.converter.LongConverter.LONG": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres."
                    , "javax.faces.converter.LongConverter.LONG_detail": "{2} : '{0}' doit \u00eatre un nombre compris entre -9223372036854775808 et 9223372036854775807. Exemple : {1}"
                    , "javax.faces.converter.NumberConverter.CURRENCY": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une currency."
                    , "javax.faces.converter.NumberConverter.CURRENCY_detail": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une currency. Exemple : {1}"
                    , "javax.faces.converter.NumberConverter.PERCENT": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme un pourcentage."
                    , "javax.faces.converter.NumberConverter.PERCENT_detail": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme un pourcentage. Exemple : {1}"
                    , "javax.faces.converter.NumberConverter.NUMBER": "{2}: '{0}' n'est pas un nombre."
                    , "javax.faces.converter.NumberConverter.NUMBER_detail": "{2}: '{0}' n'est pas un nombre. Exemple : {1}"
                    , "javax.faces.converter.NumberConverter.PATTERN": "{2}: '{0}' n'est pas un mod\u00e8le de nombre."
                    , "javax.faces.converter.NumberConverter.PATTERN_detail": "{2}: '{0}' n'est pas un mod\u00e8le de nombre. Exemple : {1}"
                    , "javax.faces.converter.ShortConverter.SHORT": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres."
                    , "javax.faces.converter.ShortConverter.SHORT_detail": "{2} : '{0}' doit \u00eatre un nombre compris entre -32768 et 32767. Exemple : {1}"
                    , "javax.faces.converter.STRING": "{1} : Impossible de convertir '{0}' en cha\u00eene."
                            // validators
                    , "javax.faces.validator.NOT_IN_RANGE": "Erreur de validation : l'attribut sp\u00e9cifi\u00e9 n'est pas compris entre les valeurs attendues de {0} et de {1}."
                    , "javax.faces.validator.DoubleRangeValidator.MAXIMUM": "{1} : Erreur de validation : la valeur est sup\u00e9rieure au maximum autoris\u00e9 de '{0}'"
                    , "javax.faces.validator.DoubleRangeValidator.MINIMUM": "{1} : Erreur de validation : la valeur est inf\u00e9rieure au minimum autoris\u00e9 de '{0}'"
                    , "javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE": "{2} : Erreur de validation : l'attribut sp\u00e9cifi\u00e9 n'est pas compris entre les valeurs attendues de {0} et de {1}."
                    , "javax.faces.validator.DoubleRangeValidator.TYPE": "{0} : Erreur de validation : la valeur n'est pas du bon type."
                    , "javax.faces.validator.LengthValidator.MAXIMUM": "{1} : Erreur de validation : la valeur est sup\u00e9rieure au maximum autoris\u00e9 de '{0}'"
                    , "javax.faces.validator.LengthValidator.MINIMUM": "{1} : Erreur de validation : la valeur est inf\u00e9rieure au minimum autoris\u00e9 de '{0}'"
                    , "javax.faces.validator.LongRangeValidator.MAXIMUM": "{1} : Erreur de validation : la valeur est sup\u00e9rieure au maximum autoris\u00e9 de '{0}'"
                    , "javax.faces.validator.LongRangeValidator.MINIMUM": "{1} : Erreur de validation : la valeur est inf\u00e9rieure au minimum autoris\u00e9 de '{0}'"
                    , "javax.faces.validator.LongRangeValidator.NOT_IN_RANGE": "{2} : Erreur de validation : l'attribut sp\u00e9cifi\u00e9 n'est pas compris entre les valeurs attendues de {0} et de {1}."
                    , "javax.faces.validator.LongRangeValidator.TYPE": "{0} : Erreur de validation : la valeur n'est pas du bon type."
                    , "javax.faces.validator.RegexValidator.NOT_MATCHED": "{1} : Erreur de validation : la valeur ne correspond pas au mod\u00e8le '{0}'"
                    , "javax.faces.validator.BeanValidator.MESSAGE": "{1} : {0}"
                }
            };
        </script>

        <style type="text/css">
            .value {
                width: 1000px;
            }
            .schedule-container{

                width:50% ;
                height:80% ;

            }
        </style>
    </h:body> 
</html>
